// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"spurt-cms/graphql/scalars"
	"time"

	"github.com/99designs/gqlgen/graphql"
)

type AdditionalFields struct {
	Sections []Section `json:"sections,omitempty"`
	Fields   []Field   `json:"fields,omitempty"`
}

type Author struct {
	ID               int        `json:"id"`
	FirstName        string     `json:"firstName"`
	LastName         string     `json:"lastName"`
	Email            string     `json:"email"`
	MobileNo         *string    `json:"mobileNo,omitempty"`
	IsActive         *int       `json:"isActive,omitempty"`
	ProfileImagePath *string    `json:"profileImagePath,omitempty"`
	CreatedOn        time.Time  `json:"createdOn"`
	CreatedBy        int        `json:"createdBy"`
	ModifiedOn       *time.Time `json:"modifiedOn,omitempty"`
	ModifiedBy       *int       `json:"modifiedBy,omitempty"`
	TenantID         int        `json:"tenantId"`
}

type Category struct {
	ID           int        `json:"id"`
	CategoryName string     `json:"categoryName"`
	CategorySlug string     `json:"categorySlug"`
	Description  string     `json:"description"`
	ImagePath    string     `json:"imagePath"`
	CreatedOn    time.Time  `json:"createdOn"`
	CreatedBy    int        `json:"createdBy"`
	ModifiedOn   *time.Time `json:"modifiedOn,omitempty"`
	ModifiedBy   *int       `json:"modifiedBy,omitempty"`
	ParentID     int        `json:"parentId"`
	TenantID     int        `json:"tenantId"`
}

type CategoryDetails struct {
	Categorylist []Category `json:"categorylist"`
	Count        int        `json:"count"`
}

type CategoryFilter struct {
	CategoryGroupID      graphql.Omittable[*int]    `json:"categoryGroupId,omitempty"`
	HierarchyLevel       graphql.Omittable[*int]    `json:"hierarchyLevel,omitempty"`
	ExcludeGroup         graphql.Omittable[*bool]   `json:"excludeGroup,omitempty"`
	ExcludeParent        graphql.Omittable[*bool]   `json:"excludeParent,omitempty"`
	ExactLevelOnly       graphql.Omittable[*bool]   `json:"exactLevelOnly,omitempty"`
	CheckEntriesPresence graphql.Omittable[*bool]   `json:"checkEntriesPresence,omitempty"`
	CategoryGroupSlug    graphql.Omittable[*string] `json:"categoryGroupSlug,omitempty"`
	ChannelSlug          graphql.Omittable[*string] `json:"channelSlug,omitempty"`
}

type Channel struct {
	ID                 int        `json:"id"`
	ChannelName        string     `json:"channelName"`
	ChannelDescription string     `json:"channelDescription"`
	SlugName           string     `json:"slugName"`
	FieldGroupID       int        `json:"fieldGroupId"`
	IsActive           int        `json:"isActive"`
	CreatedOn          time.Time  `json:"createdOn"`
	CreatedBy          int        `json:"createdBy"`
	IsDeleted          int        `json:"isDeleted"`
	ModifiedOn         *time.Time `json:"modifiedOn,omitempty"`
	ModifiedBy         *int       `json:"modifiedBy,omitempty"`
	TenantID           int        `json:"tenantId"`
}

type ChannelDetails struct {
	Channellist []Channel `json:"channellist"`
	Count       int       `json:"count"`
}

type ChannelEntries struct {
	ID               int                  `json:"id"`
	Title            string               `json:"title"`
	Slug             string               `json:"slug"`
	Description      scalars.CustomString `json:"description"`
	UserID           int                  `json:"userId"`
	ChannelID        int                  `json:"channelId"`
	Status           int                  `json:"status"`
	IsActive         int                  `json:"isActive"`
	CreatedOn        time.Time            `json:"createdOn"`
	CreatedBy        int                  `json:"createdBy"`
	ModifiedBy       *int                 `json:"modifiedBy,omitempty"`
	ModifiedOn       *time.Time           `json:"modifiedOn,omitempty"`
	CoverImage       string               `json:"coverImage"`
	ThumbnailImage   string               `json:"thumbnailImage"`
	MetaTitle        string               `json:"metaTitle"`
	MetaDescription  string               `json:"metaDescription"`
	Keyword          string               `json:"keyword"`
	CategoriesID     string               `json:"categoriesId"`
	RelatedArticles  string               `json:"relatedArticles"`
	FeaturedEntry    int                  `json:"featuredEntry"`
	ViewCount        int                  `json:"viewCount"`
	Author           *string              `json:"author,omitempty"`
	SortOrder        *int                 `json:"sortOrder,omitempty"`
	CreateTime       *time.Time           `json:"createTime,omitempty"`
	PublishedTime    *time.Time           `json:"publishedTime,omitempty"`
	ReadingTime      *int                 `json:"readingTime,omitempty"`
	Tags             *string              `json:"tags,omitempty"`
	Excerpt          *string              `json:"excerpt,omitempty"`
	ImageAltTag      *string              `json:"imageAltTag,omitempty"`
	Categories       [][]Category         `json:"categories,omitempty"`
	AdditionalFields *AdditionalFields    `json:"additionalFields,omitempty"`
	AuthorDetails    *Author              `json:"authorDetails,omitempty"`
	MemberProfile    *MemberProfile       `json:"memberProfile,omitempty"`
	TenantID         int                  `json:"tenantId"`
	ContentChunk     *Chunk               `json:"contentChunk,omitempty"`
}

type ChannelEntryDetails struct {
	ChannelEntriesList []ChannelEntries `json:"channelEntriesList"`
	Count              int              `json:"count"`
}

type Chunk struct {
	Data   []string `json:"data"`
	Length int      `json:"length"`
}

type CountUpdate struct {
	Count  int  `json:"count"`
	Status bool `json:"status"`
}

type EntriesAdditionalData struct {
	AuthorDetails    graphql.Omittable[*bool] `json:"authorDetails,omitempty"`
	MemberProfile    graphql.Omittable[*bool] `json:"memberProfile,omitempty"`
	AdditionalFields graphql.Omittable[*bool] `json:"additionalFields,omitempty"`
	Categories       graphql.Omittable[*bool] `json:"categories,omitempty"`
}

type EntriesFilter struct {
	ChannelID          graphql.Omittable[*int]    `json:"channelId,omitempty"`
	CategoryID         graphql.Omittable[*int]    `json:"categoryId,omitempty"`
	CategorySlug       graphql.Omittable[*string] `json:"categorySlug,omitempty"`
	GetChildCategories graphql.Omittable[*bool]   `json:"getChildCategories,omitempty"`
	Status             graphql.Omittable[*string] `json:"Status,omitempty"`
}

type Field struct {
	ID               int            `json:"id"`
	FieldName        string         `json:"fieldName"`
	FieldTypeID      int            `json:"fieldTypeId"`
	MandatoryField   int            `json:"mandatoryField"`
	OptionExist      int            `json:"optionExist"`
	CreatedOn        time.Time      `json:"createdOn"`
	CreatedBy        int            `json:"createdBy"`
	ModifiedOn       *time.Time     `json:"modifiedOn,omitempty"`
	ModifiedBy       *int           `json:"modifiedBY,omitempty"`
	FieldDesc        string         `json:"fieldDesc"`
	OrderIndex       int            `json:"orderIndex"`
	ImagePath        string         `json:"imagePath"`
	DatetimeFormat   *string        `json:"datetimeFormat,omitempty"`
	TimeFormat       *string        `json:"timeFormat,omitempty"`
	SectionParentID  *int           `json:"sectionParentId,omitempty"`
	CharacterAllowed *int           `json:"characterAllowed,omitempty"`
	FieldTypeName    string         `json:"fieldTypeName"`
	FieldValue       *FieldValue    `json:"fieldValue,omitempty"`
	FieldOptions     []FieldOptions `json:"fieldOptions,omitempty"`
	TenantID         int            `json:"tenantId"`
}

type FieldOptions struct {
	ID          int        `json:"id"`
	OptionName  string     `json:"optionName"`
	OptionValue string     `json:"optionValue"`
	CreatedOn   time.Time  `json:"createdOn"`
	CreatedBy   int        `json:"createdBy"`
	ModifiedOn  *time.Time `json:"modifiedOn,omitempty"`
	ModifiedBy  *int       `json:"modifiedBY,omitempty"`
	TenantID    int        `json:"tenantId"`
}

type FieldValue struct {
	ID         int        `json:"id"`
	FieldValue string     `json:"fieldValue"`
	CreatedOn  time.Time  `json:"createdOn"`
	CreatedBy  int        `json:"createdBy"`
	ModifiedOn *time.Time `json:"modifiedOn,omitempty"`
	ModifiedBy *int       `json:"modifiedBY,omitempty"`
	TenantID   int        `json:"tenantId"`
}

type Filter struct {
	Limit    graphql.Omittable[*int]    `json:"limit,omitempty"`
	Offset   graphql.Omittable[*int]    `json:"offset,omitempty"`
	IsActive graphql.Omittable[*bool]   `json:"isActive,omitempty"`
	Keyword  graphql.Omittable[*string] `json:"keyword,omitempty"`
}

type MemberArguments struct {
	Module   graphql.Omittable[*int] `json:"module,omitempty"`
	TenantID graphql.Omittable[*int] `json:"tenantId,omitempty"`
}

type MemberDetails struct {
	FirstName        string                     `json:"firstName"`
	LastName         graphql.Omittable[*string] `json:"lastName,omitempty"`
	Mobile           graphql.Omittable[*string] `json:"mobile,omitempty"`
	Email            string                     `json:"email"`
	Password         graphql.Omittable[*string] `json:"password,omitempty"`
	IsActive         graphql.Omittable[*int]    `json:"isActive,omitempty"`
	ProfileImage     graphql.Omittable[*string] `json:"profileImage,omitempty"`
	ProfileImagePath graphql.Omittable[*string] `json:"profileImagePath,omitempty"`
	Username         graphql.Omittable[*string] `json:"username,omitempty"`
	GroupID          graphql.Omittable[*int]    `json:"groupId,omitempty"`
}

type MemberProfile struct {
	ID              int        `json:"id"`
	MemberID        int        `json:"memberId"`
	ProfileName     string     `json:"profileName"`
	ProfileSlug     string     `json:"profileSlug"`
	ProfilePage     *string    `json:"profilePage,omitempty"`
	MemberDetails   any        `json:"memberDetails,omitempty"`
	CompanyName     *string    `json:"companyName,omitempty"`
	CompanyLocation *string    `json:"companyLocation,omitempty"`
	CompanyLogo     *string    `json:"companyLogo,omitempty"`
	About           *string    `json:"about,omitempty"`
	SeoTitle        *string    `json:"seoTitle,omitempty"`
	SeoDescription  *string    `json:"seoDescription,omitempty"`
	SeoKeyword      *string    `json:"seoKeyword,omitempty"`
	Linkedin        *string    `json:"linkedin,omitempty"`
	Twitter         *string    `json:"twitter,omitempty"`
	Website         *string    `json:"website,omitempty"`
	CreatedBy       *int       `json:"createdBy,omitempty"`
	CreatedOn       *time.Time `json:"createdOn,omitempty"`
	ModifiedOn      *time.Time `json:"modifiedOn,omitempty"`
	ModifiedBy      *int       `json:"modifiedBy,omitempty"`
	ClaimStatus     *int       `json:"claimStatus,omitempty"`
	IsActive        *int       `json:"IsActive,omitempty"`
	TenantID        int        `json:"tenantId"`
	ClaimDate       *time.Time `json:"claimDate,omitempty"`
}

type MemberSettings struct {
	ID                int        `json:"id"`
	AllowRegistration int        `json:"allowRegistration"`
	MemberLogin       string     `json:"memberLogin"`
	ModifiedBy        *int       `json:"modifiedBy,omitempty"`
	ModifiedOn        *time.Time `json:"modifiedOn,omitempty"`
	NotificationUsers string     `json:"notificationUsers"`
	TenantID          int        `json:"tenantId"`
}

type Members struct {
	ID               *int       `json:"Id,omitempty"`
	FirstName        string     `json:"firstName"`
	LastName         *string    `json:"lastName,omitempty"`
	Mobile           *string    `json:"mobile,omitempty"`
	Email            string     `json:"email"`
	Password         *string    `json:"password,omitempty"`
	IsActive         *int       `json:"isActive,omitempty"`
	ProfileImage     *string    `json:"profileImage,omitempty"`
	ProfileImagePath *string    `json:"profileImagePath,omitempty"`
	Username         *string    `json:"username,omitempty"`
	GroupID          *int       `json:"groupId,omitempty"`
	CreatedBy        *int       `json:"createdBy,omitempty"`
	CreatedOn        *time.Time `json:"createdOn,omitempty"`
	ModifiedOn       *time.Time `json:"modifiedOn,omitempty"`
	ModifiedBy       *int       `json:"modifiedBy,omitempty"`
	TenantID         int        `json:"tenantId"`
	IsDeleted        int        `json:"isDeleted"`
}

type MembersDetails struct {
	MembersList []Members `json:"membersList"`
	Count       int       `json:"count"`
}

type Mutation struct {
}

type Query struct {
}

type Section struct {
	ID            int        `json:"id"`
	SectionName   string     `json:"sectionName"`
	SectionTypeID int        `json:"sectionTypeId"`
	CreatedOn     time.Time  `json:"createdOn"`
	CreatedBy     int        `json:"createdBy"`
	ModifiedOn    *time.Time `json:"modifiedOn,omitempty"`
	ModifiedBy    *int       `json:"modifiedBY,omitempty"`
	OrderIndex    int        `json:"orderIndex"`
	TenantID      int        `json:"tenantId"`
}

type Sort struct {
	SortBy graphql.Omittable[*string] `json:"sortBy,omitempty"`
	Order  graphql.Omittable[*int]    `json:"order,omitempty"`
}
